import{_ as a,c as t,o as s,ag as i}from"./chunks/framework.Ctv0t_sI.js";const u=JSON.parse('{"title":"Quickstart: 15 Minutes to Productive","description":"","frontmatter":{},"headers":[],"relativePath":"docs/quickstart.md","filePath":"docs/quickstart.md"}'),n={name:"docs/quickstart.md"};function o(l,e,r,p,c,d){return s(),t("div",null,[...e[0]||(e[0]=[i(`<h1 id="quickstart-15-minutes-to-productive" tabindex="-1">Quickstart: 15 Minutes to Productive <a class="header-anchor" href="#quickstart-15-minutes-to-productive" aria-label="Permalink to &quot;Quickstart: 15 Minutes to Productive&quot;">​</a></h1><h2 id="step-1-validate-system-2-min" tabindex="-1">Step 1: Validate System (2 min) <a class="header-anchor" href="#step-1-validate-system-2-min" aria-label="Permalink to &quot;Step 1: Validate System (2 min)&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Dario-Arcos/ai-framework.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ai-framework</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/init.sh</span></span></code></pre></div><p><strong>System checks:</strong> Claude Code CLI, Git, Python, GitHub CLI, Node.js, formatters, notifications.</p><p><strong>Troubleshooting:</strong> The script provides exact installation links for missing dependencies.</p><p><strong>Full dependency list:</strong> Ver README.md del repositorio (sección Prerequisites)</p><hr><h2 id="step-2-configure-5-min" tabindex="-1">Step 2: Configure (5 min) <a class="header-anchor" href="#step-2-configure-5-min" aria-label="Permalink to &quot;Step 2: Configure (5 min)&quot;">​</a></h2><h3 id="github-cli-authentication" tabindex="-1">GitHub CLI Authentication <a class="header-anchor" href="#github-cli-authentication" aria-label="Permalink to &quot;GitHub CLI Authentication&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span></span></code></pre></div><h3 id="mcp-servers-setup" tabindex="-1">MCP Servers Setup <a class="header-anchor" href="#mcp-servers-setup" aria-label="Permalink to &quot;MCP Servers Setup&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .mcp.json.example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .mcp.json</span></span></code></pre></div><p>Enables Playwright (browser testing) and Shadcn (UI components).</p><h3 id="verification" tabindex="-1">Verification <a class="header-anchor" href="#verification" aria-label="Permalink to &quot;Verification&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/init.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # All checks should pass with ✓</span></span></code></pre></div><hr><h2 id="step-3-deploy-3-min" tabindex="-1">Step 3: Deploy (3 min) <a class="header-anchor" href="#step-3-deploy-3-min" aria-label="Permalink to &quot;Step 3: Deploy (3 min)&quot;">​</a></h2><h3 id="single-project-deployment" tabindex="-1">Single Project Deployment <a class="header-anchor" href="#single-project-deployment" aria-label="Permalink to &quot;Single Project Deployment&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .claude/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/your/project/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/your/project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claude</span></span></code></pre></div><h3 id="trivance-multi-repo-setup" tabindex="-1">Trivance Multi-Repo Setup <a class="header-anchor" href="#trivance-multi-repo-setup" aria-label="Permalink to &quot;Trivance Multi-Repo Setup&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/core/setup.sh</span></span></code></pre></div><hr><h2 id="step-4-first-session-5-min" tabindex="-1">Step 4: First Session (5 min) <a class="header-anchor" href="#step-4-first-session-5-min" aria-label="Permalink to &quot;Step 4: First Session (5 min)&quot;">​</a></h2><h3 id="map-codebase-context" tabindex="-1">Map Codebase Context <a class="header-anchor" href="#map-codebase-context" aria-label="Permalink to &quot;Map Codebase Context&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/utils:understand</span></span></code></pre></div><p><strong>Purpose:</strong> Claude analyzes your entire codebase architecture, preventing hours of refactoring later.</p><h3 id="complete-feature-implementation" tabindex="-1">Complete Feature Implementation <a class="header-anchor" href="#complete-feature-implementation" aria-label="Permalink to &quot;Complete Feature Implementation&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/SDD-cycle:specify &quot;add input validation to registration form&quot;</span></span>
<span class="line"><span>/SDD-cycle:clarify</span></span>
<span class="line"><span>/SDD-cycle:plan</span></span>
<span class="line"><span>/SDD-cycle:tasks</span></span>
<span class="line"><span>/SDD-cycle:analyze</span></span>
<span class="line"><span>/SDD-cycle:implement</span></span></code></pre></div><p><strong>Workflow:</strong> Specification → Clarification → Planning → Task generation → Cross-artifact analysis → TDD-enforced implementation.</p><h3 id="create-production-ready-pr" tabindex="-1">Create Production-Ready PR <a class="header-anchor" href="#create-production-ready-pr" aria-label="Permalink to &quot;Create Production-Ready PR&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/git-github:commit &quot;feat: add registration validation&quot;</span></span>
<span class="line"><span>/git-github:pr develop</span></span></code></pre></div><p><strong>Output:</strong> Security-reviewed PR with comprehensive description, test plan, and CI/CD integration.</p><hr><h2 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Problem</th><th>Solution</th></tr></thead><tbody><tr><td>Claude unresponsive</td><td><code>claude --reset-config</code></td></tr><tr><td>GitHub CLI authentication</td><td><code>gh auth logout &amp;&amp; gh auth login</code></td></tr><tr><td>MCP servers not working</td><td>Verify <code>.mcp.json</code> exists, restart Claude CLI</td></tr><tr><td>Init script fails</td><td><code>chmod +x scripts/init.sh &amp;&amp; bash scripts/init.sh</code></td></tr><tr><td>Missing notifications</td><td>Check system notification permissions</td></tr></tbody></table><hr><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ol><li><strong><a href="./ai-first-workflow.html">ai-first-workflow.md</a></strong> - Complete PRD → SDD → GitHub ecosystem</li><li><strong><a href="./commands-guide.html">commands-guide.md</a></strong> - 26 documented commands</li><li><strong><a href="./agents-guide.html">agents-guide.md</a></strong> - 44 specialized agents</li><li><strong><a href="./claude-code-pro-tips.html">claude-code-pro-tips.md</a></strong> - Expert workflow patterns</li></ol><hr><h2 id="learning-path" tabindex="-1">Learning Path <a class="header-anchor" href="#learning-path" aria-label="Permalink to &quot;Learning Path&quot;">​</a></h2><p><strong>Week 1: Foundation</strong></p><ul><li>Setup environment</li><li>Master <code>/utils:session-start</code> and <code>/utils:understand</code></li></ul><p><strong>Week 2: Development Cycle</strong></p><ul><li>Complete SDD workflow</li><li>Practice <code>/SDD-cycle:specify</code>, <code>/SDD-cycle:clarify</code>, <code>/SDD-cycle:implement</code></li></ul><p><strong>Week 3: Version Control</strong></p><ul><li>GitHub operations</li><li>Master <code>/git-github:commit</code>, <code>/git-github:pr</code>, <code>/git-github:worktree:*</code></li></ul><p><strong>Week 4+: Advanced</strong></p><ul><li>Specialized agents</li><li>Multi-agent coordination</li></ul><hr><p><strong>Need assistance?</strong> Run <code>claude &quot;Help me with [issue]&quot;</code> for setup, debugging, and workflow guidance.</p>`,50)])])}const g=a(n,[["render",o]]);export{u as __pageData,g as default};
