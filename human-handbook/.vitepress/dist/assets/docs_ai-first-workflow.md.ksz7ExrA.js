import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.Ctv0t_sI.js";const k=JSON.parse('{"title":"Workflow AI-First","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ai-first-workflow.md","filePath":"docs/ai-first-workflow.md"}'),n={name:"docs/ai-first-workflow.md"};function l(r,s,p,h,d,c){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="workflow-ai-first" tabindex="-1">Workflow AI-First <a class="header-anchor" href="#workflow-ai-first" aria-label="Permalink to &quot;Workflow AI-First&quot;">​</a></h1><p><em>Guía del ecosistema PRD → SDD → GitHub</em></p><hr><h2 id="🎯-arquitectura-del-ecosistema" tabindex="-1">🎯 Arquitectura del Ecosistema <a class="header-anchor" href="#🎯-arquitectura-del-ecosistema" aria-label="Permalink to &quot;🎯 Arquitectura del Ecosistema&quot;">​</a></h2><p>El ecosistema opera en 3 capas integradas:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>📋 PRD-cycle (Business Layer)</span></span>
<span class="line"><span>   ↓ Define WHAT to build</span></span>
<span class="line"><span>🏗️ SDD-cycle (Engineering Layer)</span></span>
<span class="line"><span>   ↓ Define HOW to build</span></span>
<span class="line"><span>🔄 git-github (Delivery Layer)</span></span>
<span class="line"><span>   ↓ Tracks and delivers</span></span></code></pre></div><h3 id="flujo-completo" tabindex="-1">Flujo Completo <a class="header-anchor" href="#flujo-completo" aria-label="Permalink to &quot;Flujo Completo&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[PRD: Business Requirements] --&gt; B[SDD: Technical Specification]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C[SDD: Implementation Plan]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; D[SDD: Executable Tasks]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; E[SDD: Automated Implementation]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; F[GitHub: PR + Review]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F --&gt; G[GitHub: Merge + Changelog]</span></span></code></pre></div><hr><h2 id="📦-setup-worktree" tabindex="-1">📦 Setup Worktree <a class="header-anchor" href="#📦-setup-worktree" aria-label="Permalink to &quot;📦 Setup Worktree&quot;">​</a></h2><h3 id="con-sdd-tracking-features" tabindex="-1">Con SDD Tracking (features) <a class="header-anchor" href="#con-sdd-tracking-features" aria-label="Permalink to &quot;Con SDD Tracking (features)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:specify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implement OAuth authentication&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Crea worktree: ../feature-001-implement-oauth/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Abre IDE en nueva ventana</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ⚠️ CRÍTICO: Cmd+\` para abrir terminal integrado y verificar pwd</span></span></code></pre></div><h3 id="ad-hoc-fixes-rapidos" tabindex="-1">Ad-hoc (fixes rápidos) <a class="header-anchor" href="#ad-hoc-fixes-rapidos" aria-label="Permalink to &quot;Ad-hoc (fixes rápidos)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:worktree:create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fix-payment-bug&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Crea worktree: ../worktree-fix-payment-bug/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Abre IDE en nueva ventana</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ⚠️ CRÍTICO: Cmd+\` para abrir terminal y ejecutar /utils:session-start</span></span></code></pre></div><p><strong>Verificación obligatoria</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # DEBE mostrar: ../feature-XXX/ o ../worktree-XXX/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # DEBE mostrar: rama de feature (NO main/develop)</span></span></code></pre></div><p><strong>Comportamiento según contexto</strong>:</p><ul><li>Desde <code>main/develop</code>: <code>/SDD-cycle:specify</code> crea NUEVO worktree + rama</li><li>Desde worktree existente: <code>/SDD-cycle:specify</code> usa rama ACTUAL (no crea worktree)</li><li>Para feature independiente: regresar a <code>main</code> antes de ejecutar specify</li></ul><hr><h2 id="🔄-workflows" tabindex="-1">🔄 Workflows <a class="header-anchor" href="#🔄-workflows" aria-label="Permalink to &quot;🔄 Workflows&quot;">​</a></h2><h3 id="con-prd-features-de-negocio" tabindex="-1">Con PRD (features de negocio) <a class="header-anchor" href="#con-prd-features-de-negocio" aria-label="Permalink to &quot;Con PRD (features de negocio)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === PRD (Business) ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/PRD-cycle:prd-new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">feature_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/PRD-cycle:prd-sync</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">feature_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Crea parent issue en GitHub</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === SDD (Engineering - SECUENCIAL OBLIGATORIO) ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:specify</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-issue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">issue_numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:clarify</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # OBLIGATORIO (detecta ambigüedades, actualiza spec)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:plan</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Genera research.md, data-model.md, contracts/, quickstart.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:tasks</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Genera tasks.md con GitHub sub-issues integration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:analyze</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Valida consistencia cross-artifact</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:implement</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Ejecuta tasks.md (TDD + parallelization)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === Delivery ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;all changes&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:pr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Security review automático (BLOCKING)</span></span></code></pre></div><h3 id="sin-prd-desarrollo-directo" tabindex="-1">Sin PRD (desarrollo directo) <a class="header-anchor" href="#sin-prd-desarrollo-directo" aria-label="Permalink to &quot;Sin PRD (desarrollo directo)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === SDD (Engineering - SECUENCIAL OBLIGATORIO) ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/utils:understand</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Mapea arquitectura existente</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:specify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Implement OAuth authentication&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:clarify</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # OBLIGATORIO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:plan</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Genera research.md, data-model.md, contracts/, quickstart.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:tasks</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Genera tasks.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:analyze</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Valida consistencia</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:implement</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Ejecuta tasks.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === Delivery ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;all changes&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:pr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> develop</span></span></code></pre></div><h3 id="bug-fix-urgente" tabindex="-1">Bug Fix Urgente <a class="header-anchor" href="#bug-fix-urgente" aria-label="Permalink to &quot;Bug Fix Urgente&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === Setup ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:worktree:create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fix-bug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Verificar: pwd debe mostrar ../worktree-fix-bug/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === Implementation ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/utils:understand</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;specific problem&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:specify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fix bug description&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:clarify</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # OBLIGATORIO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:plan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:tasks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:analyze</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/SDD-cycle:implement</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># === Delivery ===</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fix: description&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:pr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><hr><h2 id="🔍-findings-agentes" tabindex="-1">🔍 Findings &amp; Agentes <a class="header-anchor" href="#🔍-findings-agentes" aria-label="Permalink to &quot;🔍 Findings &amp; Agentes&quot;">​</a></h2><h3 id="despues-del-pr" tabindex="-1">Después del PR <a class="header-anchor" href="#despues-del-pr" aria-label="Permalink to &quot;Después del PR&quot;">​</a></h3><p>Security review automático genera findings por severidad:</p><ul><li><strong>CRITICAL</strong>: Security vulnerabilities, architectural violations</li><li><strong>HIGH</strong>: Technical debt, missing error handling</li><li><strong>MEDIUM</strong>: Code quality, optimization opportunities</li></ul><h3 id="resolucion" tabindex="-1">Resolución <a class="header-anchor" href="#resolucion" aria-label="Permalink to &quot;Resolución&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Analizar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:issue-manager</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pr_numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Resolver (manual o delegar a agente especialista)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/agent:security-reviewer</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Security audit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/agent:performance-engineer</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Performance optimization</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Actualizar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fix: resolve findings&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><h3 id="top-agentes" tabindex="-1">Top Agentes <a class="header-anchor" href="#top-agentes" aria-label="Permalink to &quot;Top Agentes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Agente</th><th>Uso</th></tr></thead><tbody><tr><td><code>security-reviewer</code></td><td>Security vulnerabilities, compliance</td></tr><tr><td><code>performance-engineer</code></td><td>Bottlenecks, resource optimization</td></tr><tr><td><code>code-quality-reviewer</code></td><td>Technical debt prevention</td></tr><tr><td><code>backend-architect</code></td><td>API design, service architecture</td></tr><tr><td><code>frontend-developer</code></td><td>React/Vue components, state management</td></tr><tr><td><code>database-optimizer</code></td><td>Query optimization, schema design</td></tr></tbody></table><p>📖 Referencia completa: @agents-guide.md (45 agentes)</p><hr><h2 id="🔄-post-merge" tabindex="-1">🔄 Post-Merge <a class="header-anchor" href="#🔄-post-merge" aria-label="Permalink to &quot;🔄 Post-Merge&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Changelog</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/utils:changelog</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pr_numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Cleanup worktree</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/git-github:worktree:cleanup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">worktree_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Triple cleanup (worktree/local/remote)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># → Regresa automáticamente a main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Docs (si necesario)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/utils:docs</span></span></code></pre></div><hr><h2 id="💡-tips" tabindex="-1">💡 Tips <a class="header-anchor" href="#💡-tips" aria-label="Permalink to &quot;💡 Tips&quot;">​</a></h2><h3 id="do" tabindex="-1">DO <a class="header-anchor" href="#do" aria-label="Permalink to &quot;DO&quot;">​</a></h3><ul><li>✅ Usar <code>/SDD-cycle:clarify</code> SIEMPRE</li><li>✅ Security review antes de PR (automático con <code>/git-github:pr</code>)</li><li>✅ Un PR por worktree</li><li>✅ Commits semánticos: <code>fix: Closes #77</code></li><li>✅ Cleanup worktrees post-merge</li></ul><h3 id="don-t" tabindex="-1">DON&#39;T <a class="header-anchor" href="#don-t" aria-label="Permalink to &quot;DON&#39;T&quot;">​</a></h3><ul><li>❌ Saltarse <code>/SDD-cycle:clarify</code></li><li>❌ Múltiples PRs para una feature</li><li>❌ Desarrollar en main/develop directamente</li><li>❌ Mergear sin security review aprobado</li><li>❌ Cambiar de rama dentro de worktree (crear nuevo worktree)</li></ul><h3 id="seleccion-de-path" tabindex="-1">Selección de Path <a class="header-anchor" href="#seleccion-de-path" aria-label="Permalink to &quot;Selección de Path&quot;">​</a></h3><p><strong>PRD-cycle</strong>: Features con stakeholders de negocio, aprobación de producto <strong>SDD-cycle directo</strong>: Bug fixes, refactorings, features técnicas <strong>Worktree ad-hoc</strong>: POCs rápidos, trabajo exploratorio sin tracking</p><hr><h2 id="📚-referencia-rapida" tabindex="-1">📚 Referencia Rápida <a class="header-anchor" href="#📚-referencia-rapida" aria-label="Permalink to &quot;📚 Referencia Rápida&quot;">​</a></h2><h3 id="prd-cycle-business-layer" tabindex="-1">PRD-cycle (Business Layer) <a class="header-anchor" href="#prd-cycle-business-layer" aria-label="Permalink to &quot;PRD-cycle (Business Layer)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Comando</th><th>Propósito</th></tr></thead><tbody><tr><td><code>/PRD-cycle:prd-new</code></td><td>Crear PRD minimalista</td></tr><tr><td><code>/PRD-cycle:prd-sync</code></td><td>Sincronizar PRD a GitHub Issue</td></tr></tbody></table><h3 id="sdd-cycle-engineering-layer-secuencial-obligatorio" tabindex="-1">SDD-cycle (Engineering Layer - SECUENCIAL OBLIGATORIO) <a class="header-anchor" href="#sdd-cycle-engineering-layer-secuencial-obligatorio" aria-label="Permalink to &quot;SDD-cycle (Engineering Layer - SECUENCIAL OBLIGATORIO)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Comando</th><th>Propósito</th></tr></thead><tbody><tr><td><code>/SDD-cycle:specify</code></td><td>Crear especificación técnica</td></tr><tr><td><code>/SDD-cycle:clarify</code></td><td>Clarificar ambigüedades (OBLIGATORIO)</td></tr><tr><td><code>/SDD-cycle:plan</code></td><td>Generar research.md, data-model.md, contracts/, quickstart.md</td></tr><tr><td><code>/SDD-cycle:tasks</code></td><td>Generar tasks.md con GitHub sub-issues</td></tr><tr><td><code>/SDD-cycle:analyze</code></td><td>Validación cross-artifact</td></tr><tr><td><code>/SDD-cycle:implement</code></td><td>Ejecutar tasks.md (TDD + parallelization)</td></tr><tr><td><code>/SDD-cycle:constitution</code></td><td>Actualizar constitución</td></tr></tbody></table><h3 id="git-github-delivery-layer" tabindex="-1">git-github (Delivery Layer) <a class="header-anchor" href="#git-github-delivery-layer" aria-label="Permalink to &quot;git-github (Delivery Layer)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Comando</th><th>Propósito</th></tr></thead><tbody><tr><td><code>/git-github:worktree:create</code></td><td>Crear worktree aislado</td></tr><tr><td><code>/git-github:worktree:cleanup</code></td><td>Cleanup triple (worktree/local/remote)</td></tr><tr><td><code>/git-github:commit</code></td><td>Commits semánticos agrupados</td></tr><tr><td><code>/git-github:pr</code></td><td>Crear PR con security review</td></tr><tr><td><code>/git-github:issue-manager</code></td><td>Analizar issues/PRs</td></tr><tr><td><code>/git-github:issue-sync</code></td><td>Sincronizar updates a GitHub</td></tr></tbody></table><h3 id="utils-utilidades" tabindex="-1">utils (Utilidades) <a class="header-anchor" href="#utils-utilidades" aria-label="Permalink to &quot;utils (Utilidades)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Comando</th><th>Propósito</th></tr></thead><tbody><tr><td><code>/utils:session-start</code></td><td>Análisis de contexto + issues activos</td></tr><tr><td><code>/utils:understand</code></td><td>Mapeo de arquitectura existente</td></tr><tr><td><code>/utils:changelog</code></td><td>Actualizar CHANGELOG.md</td></tr><tr><td><code>/utils:docs</code></td><td>Análisis y actualización de documentación</td></tr></tbody></table><hr><p><em>Última actualización: 2025-10-07 | Ecosistema PRD-SDD-GitHub</em></p>`,59)])])}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
